{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "sshPublicKey": {
      "type": "securestring",
      "metadata": {
        "description": "SSH public key for the Virtual Machines."
      }
    },
    "scaleUnitNumber": {
      "type": "int",
      "metadata": {
        "description": "Number of Swarm agent nodes in the cluster."
      }
    },
    "vmCount": {
      "type": "int",
      "metadata": {
        "description": "Number of Swarm agent nodes in the cluster."
      }
    },
    "vmSize": {
      "type": "string",
      "metadata": {
        "description": "VM instance type."
      }
    },
    "vmName": {
      "type": "string",
      "defaultValue": "swarm-crate-node-",
      "metadata": {
        "description": "VM name."
      }
    },
    "storageAccountCount": {
      "type": "int",
      "metadata": {
        "description": "Number of Storage Accounts in the scale unit."
      }
    }
  },
  "variables": {
    "apiVersion": "2015-06-15",
    "commands": "[concat('/bin/bash install-node.sh', ' ', parameters('scaleUnitNumber'))]",
    "adminUsername": "azureuser",
    "imagePublisher": "Canonical",
    "imageOffer": "UbuntuServer",
    "imageSKU": "15.10",
    "offset": "[mul(parameters('vmCount'), sub(parameters('scaleUnitNumber'), 1))]",
    "availabilitySet": "[concat('nodes-', parameters('scaleUnitNumber'), '-set')]",
    "subnetName": "subnet1k1",
    "virtualNetworkName": "vnet1k1",
    "resourceGroupNetworkName": "1k1network",
    "vnetID": "[resourceId(variables('resourceGroupNetworkName'), 'Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetID'), '/subnets/', variables('subnetName'))]",
    "storageAccountName": "[concat(uniqueString(resourceGroup().id, deployment().name))]",
    "storageAccountType": "Standard_LRS",
    "vmStorageAccountContainerName": "vhds",
    "vmBlobContainerName": "data",
    "dataDiskSize": "1023",
    "sshKeyPath": "[concat('/home/', variables('adminUsername'), '/.ssh/authorized_keys')]",
    "scripts": [
      "https://raw.githubusercontent.com/crate/p-azure/master/arm-templates/docker/install-node.sh",
      "https://raw.githubusercontent.com/crate/p-azure/master/arm-templates/autopart.sh"
    ]
  },
  "resources": [
    {
      "apiVersion": "[variables('apiVersion')]",
      "name": "[concat(variables('storageAccountName'), copyIndex())]",
      "type": "Microsoft.Storage/storageAccounts",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "storageAccountsLoop",
        "count": "[parameters('storageAccountCount')]"
      },
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Compute/availabilitySets",
      "name": "[variables('availabilitySet')]",
      "location": "[resourceGroup().location]",
      "properties": {}
    },
    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(parameters('vmName'), add(copyIndex(1), variables('offset')), '-nic')]",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "nicLoopNode",
        "count": "[parameters('vmCount')]"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipConfigNode",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[concat('10.0.', parameters('scaleUnitNumber'), '.', copyIndex(1))]",
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(parameters('vmName'), add(copyIndex(1), variables('offset')))]",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "vmLoopNode",
        "count": "[parameters('vmCount')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'), string(mod(copyIndex(1), parameters('storageAccountCount'))))]",
        "[concat('Microsoft.Network/networkInterfaces/', parameters('vmName'), add(copyIndex(1), variables('offset')), '-nic')]",
        "[concat('Microsoft.Compute/availabilitySets/', variables('availabilitySet'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computerName": "[concat(parameters('vmName'), add(copyIndex(1), variables('offset')))]",
          "adminUsername": "[variables('adminUsername')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": "true",
            "ssh": {
              "publicKeys": [
                {
                  "path": "[variables('sshKeyPath')]",
                  "keyData": "[parameters('sshPublicKey')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[variables('imageSKU')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "[concat(parameters('vmName'), add(copyIndex(1), variables('offset')), '-osdisk')]",
            "vhd": {
              "uri": "[concat('http://', variables('storageAccountName'), string(mod(copyIndex(1), parameters('storageAccountCount'))),  '.blob.core.windows.net/', variables('vmStorageAccountContainerName'), '/node-', copyIndex(1), '-osdisk.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          },
          "dataDisks": [
            {
              "name": "datadisk0",
              "diskSizeGB": "[variables('dataDiskSize')]",
              "lun": 0,
              "caching": "ReadOnly",
              "createOption": "Empty",
              "vhd": {
                "Uri": "[concat('http://', variables('storageAccountName'), string(mod(copyIndex(1), parameters('storageAccountCount'))),  '.blob.core.windows.net/',variables('vmBlobContainerName'), '/node-', copyIndex(1), 'dataDisk0.vhd')]"
              }
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(parameters('vmName'), add(copyIndex(1), variables('offset')), '-nic'))]"
            }
          ]
        }
      }
    },
    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(parameters('vmName'), add(copyIndex(1), variables('offset')), '/DockerExtension')]",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "extensionLoopNode",
        "count": "[parameters('vmCount')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', parameters('vmName'), add(copyIndex(1), variables('offset')))]",
        "[concat('Microsoft.Compute/virtualMachines/', parameters('vmName'), add(copyIndex(1), variables('offset')), '/extensions/InstallNodes')]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "DockerExtension",
        "typeHandlerVersion": "1.0",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "docker": {
            "port": "2375",
            "options": [
              "--cluster-store=consul://10.0.0.4:8500",
              "--cluster-advertise=eth0:2375"
            ]
          }
        }
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(parameters('vmName'), add(copyIndex(1), variables('offset')), '/InstallNodes')]",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "extensionInstallNodes",
        "count": "[parameters('vmCount')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', parameters('vmName'), add(copyIndex(1), variables('offset')))]"
      ],
      "properties": {
        "publisher": "Microsoft.OSTCExtensions",
        "type": "CustomScriptForLinux",
        "typeHandlerVersion": "1.4",
        "settings": {
          "fileUris": "[variables('scripts')]",
          "commandToExecute": "[variables('commands')]"
        }
      }
    }
  ]
}